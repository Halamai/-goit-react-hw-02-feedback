{"version":3,"sources":["Components/feedbackOptions/FeedbackOptions.js","Components/notification/Notification.js","Components/statistic/Statistic.js","Components/section/Section.js","Components/App.js","index.js"],"names":["FeedbackOptions","this","props","onLeaveFeedback","options","className","type","name","onClick","Component","Notification","Statistic","good","neutral","bad","total","positivePercentage","Section","state","changeState","e","target","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","sum","positiveFeedback","Number","toFixed","title","Object","keys","map","item","message","App","ReactDOM","render","document","getElementById"],"mappings":"gPACqBA,E,4JACnB,WACE,MAAqCC,KAAKC,MAAlCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,QACzB,OACE,wBACEC,UAAU,MACVC,KAAK,SACLC,KAAMH,EACNI,QAASL,EAJX,SAMGC,Q,GAVoCK,aCM9BC,EALM,WAEnB,MADgB,qBCuBHC,EAvBG,SAACT,GACjB,IAAQU,EAAkDV,EAAlDU,KAAMC,EAA4CX,EAA5CW,QAASC,EAAmCZ,EAAnCY,IAAKC,EAA8Bb,EAA9Ba,MAAOC,EAAuBd,EAAvBc,mBACnC,OACE,qCACE,oBAAIX,UAAU,iBAAd,wBACA,+BACE,uCAAUO,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,IAAvB,cCRFC,E,4MACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPK,YAAc,SAACC,GACb,IAAMb,EAAOa,EAAEC,OAAOd,KACtB,EAAKe,UAAS,SAACC,GAAD,sBAAchB,EAAOgB,EAAKhB,GAAQ,O,EAElDiB,mBAAqB,WACnB,MAA+B,EAAKN,MAEpC,OAFA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBW,gCAAkC,WAChC,IAAMC,EAAM,EAAKF,qBACXG,EAAmBD,EAAO,EAAKR,MAAMN,KAAOc,EAAO,IAAM,EAC/D,OAAOE,OAAOD,GAAkBE,QAAQ,I,4CAE1C,WAAU,IAAD,OACCC,EAAU7B,KAAKC,MAAf4B,MACFf,EAAQd,KAAKuB,qBACnB,OACE,gCACE,oBAAInB,UAAU,eAAd,SAA8ByB,IAC7BC,OAAOC,KAAK/B,KAAKiB,OAAOe,KAAI,SAACC,GAC5B,OACE,cAAC,EAAD,CACE/B,gBAAiB,EAAKgB,YACtBf,QAAS8B,OAIf,uBAECnB,EACC,cAAC,EAAD,CACEH,KAAMX,KAAKiB,MAAMN,KACjBC,QAASZ,KAAKiB,MAAML,QACpBC,IAAKb,KAAKiB,MAAMJ,IAChBC,MAAOA,EACPC,mBAAoBf,KAAKwB,kCAG3B,cAAC,EAAD,CAAcU,QAAS,6B,GA7CX1B,aAoDPQ,IC9CAmB,EARH,WACV,OACE,mCACE,cAAC,EAAD,CAASN,MAAM,6B,MCDrBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.203c6569.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nexport default class FeedbackOptions extends Component {\n  render() {\n    const { onLeaveFeedback, options } = this.props;\n    return (\n      <button\n        className=\"btn\"\n        type=\"button\"\n        name={options}\n        onClick={onLeaveFeedback}\n      >\n        {options}\n      </button>\n    );\n  }\n}\n","// import React from \"react\";\r\n\r\nconst Notification = () => {\r\n  const message = \"No feedback given\";\r\n  return message;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistic = (props) => {\n  const { good, neutral, bad, total, positivePercentage } = props;\n  return (\n    <>\n      <h2 className=\"titleStatistic\">Statistics</h2>\n      <ul>\n        <li>Good:{good}</li>\n        <li>Neutral:{neutral}</li>\n        <li>Bad:{bad}</li>\n        <li>Total:{total}</li>\n        <li>Positive feedback:{positivePercentage()}%</li>\n      </ul>\n    </>\n  );\n};\nStatistic.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.func.isRequired,\n};\n\nexport default Statistic;\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"../feedbackOptions/FeedbackOptions.js\";\r\nimport Notification from \"../notification/Notification.js\";\r\nimport Statistics from \"../statistic/Statistic.js\";\r\n\r\nclass Section extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  changeState = (e) => {\r\n    const name = e.target.name;\r\n    this.setState((prev) => ({ [name]: prev[name] + 1 }));\r\n  };\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    const sum = this.countTotalFeedback();\r\n    const positiveFeedback = sum ? (this.state.good / sum) * 100 : 0;\r\n    return Number(positiveFeedback).toFixed(0);\r\n  };\r\n  render() {\r\n    const { title } = this.props;\r\n    const total = this.countTotalFeedback();\r\n    return (\r\n      <div>\r\n        <h1 className=\"titleFitback\">{title}</h1>\r\n        {Object.keys(this.state).map((item) => {\r\n          return (\r\n            <FeedbackOptions\r\n              onLeaveFeedback={this.changeState}\r\n              options={item}\r\n            />\r\n          );\r\n        })}\r\n        <hr />\r\n\r\n        {total ? (\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={total}\r\n            positivePercentage={this.countPositiveFeedbackPercentage}\r\n          ></Statistics>\r\n        ) : (\r\n          <Notification message={\"No feedback given\"} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import React from \"react\";\nimport Section from \"./section/Section\";\n\nconst App = () => {\n  return (\n    <>\n      <Section title=\"Please leave feedback\" />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}